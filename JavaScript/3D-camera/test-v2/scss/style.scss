* {
	box-sizing: border-box;
}

#viewport {
	position: absolute;
	--perspective: 500px;
	perspective: var(--perspective);
	inset: 0px;
	width: 100%;
	height: 100%;
	overflow: hidden;
}

#camera {
	width: 0px;
	height: 0px;
	position: relative;
	left: 50%;
	top: 50%;
	transform-style: preserve-3d;
}


#scene {
	--size: 250px;
	--x: 0px;
	--y: 0px;
	--z: 0px;
	--angle: 0deg;
	translate: calc(var(--x) * -1) calc(var(--y) - var(--size) / 2) calc(var(--z) * -1 + var(--size) / 2 + var(--perspective));
	transform-origin: var(--x) calc(var(--y) * -1 + var(--size) / 2) calc(var(--z) - var(--size) / 2);
	transform: rotateY(var(--angle)) rotateX(360deg);
	transition: translate 0.2s, transform-origin .2s, transform .5s;
	transform-style: preserve-3d;

	.block {
		position: absolute;
		width: var(--size);
		height: var(--size);
		transform-style: preserve-3d;
		outline: 1px solid black;
		transform: rotateX(90deg);

		&.wall {
			&:not(.rock)>div {
				background: red;
			}

			>div {
				position: absolute;
				width: 100%;
				height: 100%;
				--rotateX: 0deg;
				--rotateY: 0deg;
				--rotateZ: 0deg;
				transform: translateZ(calc(var(--size) / 2)) rotateY(var(--rotateY)) rotateZ(var(--rotateZ)) rotateX(var(--rotateX));
				outline: 1px solid black;

				&.left {
					--rotateZ: 90deg;
					--rotateX: 270deg;
					translate: calc(var(--size) / -2);
				}

				&.right {
					--rotateZ: -90deg;
					--rotateY: 90deg;
					translate: calc(var(--size) / 2);
				}

				&.front {
					--rotateX: -90deg;
					translate: 0px calc(var(--size) / 2);
				}

				&.back {
					--rotateX: -90deg;
					translate: 0px calc(var(--size) / -2);
				}

				&.top {
					translate: 0px 0px calc(var(--size) / 2);
				}
			}
		}

		&.rock>div {
			background: brown;
			background-size: 100%;
		}

		&.floor {
			background: green;
		}
	}
}